{"version":3,"file":"static/js/431.28da81c8.chunk.js","mappings":";wNAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wTAgBzBC,EAAaJ,EAAAA,GAAAA,GAASK,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,2CCGnC,EAlBmB,SAAHG,GAAkB,IAAbC,EAAMD,EAANC,OACXC,GAAWC,EAAAA,EAAAA,MAEnB,OACEC,EAAAA,EAAAA,KAAA,MAAAC,SACKJ,EAAOK,KAAI,SAAAC,GAAA,IAAEC,EAAKD,EAALC,MAAOC,EAAEF,EAAFE,GAAIC,EAAIH,EAAJG,KAAI,OACxBN,EAAAA,EAAAA,KAACN,EAAU,CAAAO,UACXD,EAAAA,EAAAA,KAAEX,EAAU,CACZkB,MAAO,CAACC,KAAMV,GACdW,GAAE,WAAAC,OAAaL,GAAKJ,SACjBG,GAAgBE,KAJFD,EAMN,KAIxB,6HCgBA,EAjCqB,WACjB,IAAAM,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAClCI,GAA4BC,EAAAA,EAAAA,MAAnBC,GAAoCL,EAAAA,EAAAA,GAAAG,EAAA,GAArB,GAY1B,OACEjB,EAAAA,EAAAA,KAAA,OAAAC,UACEmB,EAAAA,EAAAA,MAAA,QAAMC,SAZmB,SAACC,GACxBA,EAAMC,iBACN,IAAMR,EAAcO,EAAME,OAAOvB,SAASwB,OAAOC,MACjDC,QAAQC,IAAI,cAAeb,GAEvBA,EAAYc,OAAOC,OAAS,GAC9BX,EAAgB,CAACY,MAAQhB,GAG7B,EAGmCd,SAAA,EACjCD,EAAAA,EAAAA,KAAA,SAAOgC,KAAK,OACZ1B,KAAO,SACR2B,YAAY,cACXP,MAAOX,EACPmB,SAAU,SAACC,GAAC,OAAKnB,EAAemB,EAAEX,OAAOE,MAAM,EAC/CU,UAAQ,EACRC,UAAW,KAGXrC,EAAAA,EAAAA,KAAA,UAAQgC,KAAK,SAAQ/B,SAAE,eAK/B,wBCjCAqC,EAAA,kBAAAC,CAAA,MAAAA,EAAA,GAAAC,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAtB,KAAA,EAAAuB,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAX,EAAAC,EAAArB,GAAA,OAAAe,OAAAI,eAAAC,EAAAC,EAAA,CAAArB,MAAAA,EAAAgC,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAd,EAAAC,EAAA,KAAAU,EAAA,aAAAI,GAAAJ,EAAA,SAAAX,EAAAC,EAAArB,GAAA,OAAAoB,EAAAC,GAAArB,CAAA,WAAAoC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,GAAAA,EAAAtB,qBAAA0B,EAAAJ,EAAAI,EAAAC,EAAA5B,OAAA6B,OAAAH,EAAAzB,WAAA6B,EAAA,IAAAC,EAAAN,GAAA,WAAArB,EAAAwB,EAAA,WAAA3C,MAAA+C,EAAAV,EAAAE,EAAAM,KAAAF,CAAA,UAAAK,EAAAC,EAAA7B,EAAA8B,GAAA,WAAA5C,KAAA,SAAA4C,IAAAD,EAAAE,KAAA/B,EAAA8B,GAAA,OAAAf,GAAA,OAAA7B,KAAA,QAAA4C,IAAAf,EAAA,EAAAtB,EAAAuB,KAAAA,EAAA,IAAAgB,EAAA,YAAAV,IAAA,UAAAW,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAAxB,EAAAwB,EAAA9B,GAAA,8BAAA+B,EAAAzC,OAAA0C,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAA5C,GAAAG,EAAAkC,KAAAO,EAAAjC,KAAA8B,EAAAG,GAAA,IAAAE,EAAAN,EAAAtC,UAAA0B,EAAA1B,UAAAD,OAAA6B,OAAAW,GAAA,SAAAM,EAAA7C,GAAA,0BAAA8C,SAAA,SAAAC,GAAAhC,EAAAf,EAAA+C,GAAA,SAAAb,GAAA,YAAAc,QAAAD,EAAAb,EAAA,gBAAAe,EAAAtB,EAAAuB,GAAA,SAAAC,EAAAJ,EAAAb,EAAAkB,EAAAC,GAAA,IAAAC,EAAAtB,EAAAL,EAAAoB,GAAApB,EAAAO,GAAA,aAAAoB,EAAAhE,KAAA,KAAAiE,EAAAD,EAAApB,IAAAlD,EAAAuE,EAAAvE,MAAA,OAAAA,GAAA,iBAAAA,GAAAiB,EAAAkC,KAAAnD,EAAA,WAAAkE,EAAAE,QAAApE,EAAAwE,SAAAC,MAAA,SAAAzE,GAAAmE,EAAA,OAAAnE,EAAAoE,EAAAC,EAAA,aAAAlC,GAAAgC,EAAA,QAAAhC,EAAAiC,EAAAC,EAAA,IAAAH,EAAAE,QAAApE,GAAAyE,MAAA,SAAAC,GAAAH,EAAAvE,MAAA0E,EAAAN,EAAAG,EAAA,aAAAI,GAAA,OAAAR,EAAA,QAAAQ,EAAAP,EAAAC,EAAA,IAAAA,EAAAC,EAAApB,IAAA,KAAA0B,EAAAzD,EAAA,gBAAAnB,MAAA,SAAA+D,EAAAb,GAAA,SAAA2B,IAAA,WAAAX,GAAA,SAAAE,EAAAC,GAAAF,EAAAJ,EAAAb,EAAAkB,EAAAC,EAAA,WAAAO,EAAAA,EAAAA,EAAAH,KAAAI,EAAAA,GAAAA,GAAA,aAAA9B,EAAAV,EAAAE,EAAAM,GAAA,IAAAhE,EAAA,iCAAAkF,EAAAb,GAAA,iBAAArE,EAAA,UAAAiG,MAAA,iDAAAjG,EAAA,cAAAkF,EAAA,MAAAb,EAAA,OAAA6B,GAAA,KAAAlC,EAAAkB,OAAAA,EAAAlB,EAAAK,IAAAA,IAAA,KAAA8B,EAAAnC,EAAAmC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAnC,GAAA,GAAAoC,EAAA,IAAAA,IAAA7B,EAAA,gBAAA6B,CAAA,cAAApC,EAAAkB,OAAAlB,EAAAsC,KAAAtC,EAAAuC,MAAAvC,EAAAK,SAAA,aAAAL,EAAAkB,OAAA,uBAAAlF,EAAA,MAAAA,EAAA,YAAAgE,EAAAK,IAAAL,EAAAwC,kBAAAxC,EAAAK,IAAA,gBAAAL,EAAAkB,QAAAlB,EAAAyC,OAAA,SAAAzC,EAAAK,KAAArE,EAAA,gBAAAyF,EAAAtB,EAAAX,EAAAE,EAAAM,GAAA,cAAAyB,EAAAhE,KAAA,IAAAzB,EAAAgE,EAAA0C,KAAA,6BAAAjB,EAAApB,MAAAE,EAAA,gBAAApD,MAAAsE,EAAApB,IAAAqC,KAAA1C,EAAA0C,KAAA,WAAAjB,EAAAhE,OAAAzB,EAAA,YAAAgE,EAAAkB,OAAA,QAAAlB,EAAAK,IAAAoB,EAAApB,IAAA,YAAAgC,EAAAF,EAAAnC,GAAA,IAAA2C,EAAA3C,EAAAkB,OAAAA,EAAAiB,EAAAtD,SAAA8D,GAAA,QAAAC,IAAA1B,EAAA,OAAAlB,EAAAmC,SAAA,eAAAQ,GAAAR,EAAAtD,SAAAgE,SAAA7C,EAAAkB,OAAA,SAAAlB,EAAAK,SAAAuC,EAAAP,EAAAF,EAAAnC,GAAA,UAAAA,EAAAkB,SAAA,WAAAyB,IAAA3C,EAAAkB,OAAA,QAAAlB,EAAAK,IAAA,IAAAyC,UAAA,oCAAAH,EAAA,aAAApC,EAAA,IAAAkB,EAAAtB,EAAAe,EAAAiB,EAAAtD,SAAAmB,EAAAK,KAAA,aAAAoB,EAAAhE,KAAA,OAAAuC,EAAAkB,OAAA,QAAAlB,EAAAK,IAAAoB,EAAApB,IAAAL,EAAAmC,SAAA,KAAA5B,EAAA,IAAAwC,EAAAtB,EAAApB,IAAA,OAAA0C,EAAAA,EAAAL,MAAA1C,EAAAmC,EAAAa,YAAAD,EAAA5F,MAAA6C,EAAAiD,KAAAd,EAAAe,QAAA,WAAAlD,EAAAkB,SAAAlB,EAAAkB,OAAA,OAAAlB,EAAAK,SAAAuC,GAAA5C,EAAAmC,SAAA,KAAA5B,GAAAwC,GAAA/C,EAAAkB,OAAA,QAAAlB,EAAAK,IAAA,IAAAyC,UAAA,oCAAA9C,EAAAmC,SAAA,KAAA5B,EAAA,UAAA4C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,SAAAM,WAAAC,KAAAN,EAAA,UAAAO,EAAAP,GAAA,IAAA5B,EAAA4B,EAAAQ,YAAA,GAAApC,EAAAhE,KAAA,gBAAAgE,EAAApB,IAAAgD,EAAAQ,WAAApC,CAAA,UAAAxB,EAAAN,GAAA,KAAA+D,WAAA,EAAAJ,OAAA,SAAA3D,EAAAsB,QAAAkC,EAAA,WAAAW,OAAA,YAAAhD,EAAAiD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAnF,GAAA,GAAAoF,EAAA,OAAAA,EAAA1D,KAAAyD,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAxG,QAAA,KAAA2G,GAAA,EAAAjB,EAAA,SAAAA,IAAA,OAAAiB,EAAAH,EAAAxG,QAAA,GAAAa,EAAAkC,KAAAyD,EAAAG,GAAA,OAAAjB,EAAA9F,MAAA4G,EAAAG,GAAAjB,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAA9F,WAAAyF,EAAAK,EAAAP,MAAA,EAAAO,CAAA,SAAAA,EAAAA,KAAAA,CAAA,SAAAA,KAAAf,EAAA,UAAAA,IAAA,OAAA/E,WAAAyF,EAAAF,MAAA,UAAAlC,EAAArC,UAAAsC,EAAAnC,EAAAyC,EAAA,eAAA5D,MAAAsD,EAAArB,cAAA,IAAAd,EAAAmC,EAAA,eAAAtD,MAAAqD,EAAApB,cAAA,IAAAoB,EAAA2D,YAAAjF,EAAAuB,EAAAzB,EAAA,qBAAAhB,EAAAoG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,GAAAA,EAAAE,YAAA,QAAAD,IAAAA,IAAA9D,GAAA,uBAAA8D,EAAAH,aAAAG,EAAAvI,MAAA,EAAAiC,EAAAwG,KAAA,SAAAH,GAAA,OAAAnG,OAAAuG,eAAAvG,OAAAuG,eAAAJ,EAAA5D,IAAA4D,EAAAK,UAAAjE,EAAAvB,EAAAmF,EAAArF,EAAA,sBAAAqF,EAAAlG,UAAAD,OAAA6B,OAAAgB,GAAAsD,CAAA,EAAArG,EAAA2G,MAAA,SAAAtE,GAAA,OAAAsB,QAAAtB,EAAA,EAAAW,EAAAI,EAAAjD,WAAAe,EAAAkC,EAAAjD,UAAAW,GAAA,0BAAAd,EAAAoD,cAAAA,EAAApD,EAAA4G,MAAA,SAAApF,EAAAC,EAAAC,EAAAC,EAAA0B,QAAA,IAAAA,IAAAA,EAAAwD,SAAA,IAAAC,EAAA,IAAA1D,EAAA7B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA0B,GAAA,OAAArD,EAAAoG,oBAAA3E,GAAAqF,EAAAA,EAAA7B,OAAArB,MAAA,SAAAF,GAAA,OAAAA,EAAAgB,KAAAhB,EAAAvE,MAAA2H,EAAA7B,MAAA,KAAAjC,EAAAD,GAAA7B,EAAA6B,EAAA/B,EAAA,aAAAE,EAAA6B,EAAAnC,GAAA,0BAAAM,EAAA6B,EAAA,qDAAA/C,EAAA+G,KAAA,SAAAC,GAAA,IAAAC,EAAA/G,OAAA8G,GAAAD,EAAA,WAAAvG,KAAAyG,EAAAF,EAAApB,KAAAnF,GAAA,OAAAuG,EAAAG,UAAA,SAAAjC,IAAA,KAAA8B,EAAAxH,QAAA,KAAAiB,EAAAuG,EAAAI,MAAA,GAAA3G,KAAAyG,EAAA,OAAAhC,EAAA9F,MAAAqB,EAAAyE,EAAAP,MAAA,EAAAO,CAAA,QAAAA,EAAAP,MAAA,EAAAO,CAAA,GAAAjF,EAAA8C,OAAAA,EAAAb,EAAA9B,UAAA,CAAAoG,YAAAtE,EAAA6D,MAAA,SAAAsB,GAAA,QAAAC,KAAA,OAAApC,KAAA,OAAAX,KAAA,KAAAC,WAAAK,EAAA,KAAAF,MAAA,OAAAP,SAAA,UAAAjB,OAAA,YAAAb,SAAAuC,EAAA,KAAAc,WAAAzC,QAAA2C,IAAAwB,EAAA,QAAArJ,KAAA,WAAAA,EAAAuJ,OAAA,IAAAlH,EAAAkC,KAAA,KAAAvE,KAAAkI,OAAAlI,EAAAwJ,MAAA,WAAAxJ,QAAA6G,EAAA,EAAA4C,KAAA,gBAAA9C,MAAA,MAAA+C,EAAA,KAAA/B,WAAA,GAAAG,WAAA,aAAA4B,EAAAhI,KAAA,MAAAgI,EAAApF,IAAA,YAAAqF,IAAA,EAAAlD,kBAAA,SAAAmD,GAAA,QAAAjD,KAAA,MAAAiD,EAAA,IAAA3F,EAAA,cAAA4F,EAAAC,EAAAC,GAAA,OAAArE,EAAAhE,KAAA,QAAAgE,EAAApB,IAAAsF,EAAA3F,EAAAiD,KAAA4C,EAAAC,IAAA9F,EAAAkB,OAAA,OAAAlB,EAAAK,SAAAuC,KAAAkD,CAAA,SAAA5B,EAAA,KAAAR,WAAAnG,OAAA,EAAA2G,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAAzC,EAAA4B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAsC,EAAA,UAAAvC,EAAAC,QAAA,KAAA+B,KAAA,KAAAU,EAAA3H,EAAAkC,KAAA+C,EAAA,YAAA2C,EAAA5H,EAAAkC,KAAA+C,EAAA,iBAAA0C,GAAAC,EAAA,SAAAX,KAAAhC,EAAAE,SAAA,OAAAqC,EAAAvC,EAAAE,UAAA,WAAA8B,KAAAhC,EAAAG,WAAA,OAAAoC,EAAAvC,EAAAG,WAAA,SAAAuC,GAAA,QAAAV,KAAAhC,EAAAE,SAAA,OAAAqC,EAAAvC,EAAAE,UAAA,YAAAyC,EAAA,UAAA/D,MAAA,kDAAAoD,KAAAhC,EAAAG,WAAA,OAAAoC,EAAAvC,EAAAG,WAAA,KAAAf,OAAA,SAAAhF,EAAA4C,GAAA,QAAA6D,EAAA,KAAAR,WAAAnG,OAAA,EAAA2G,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAA,GAAAb,EAAAC,QAAA,KAAA+B,MAAAjH,EAAAkC,KAAA+C,EAAA,oBAAAgC,KAAAhC,EAAAG,WAAA,KAAAyC,EAAA5C,EAAA,OAAA4C,IAAA,UAAAxI,GAAA,aAAAA,IAAAwI,EAAA3C,QAAAjD,GAAAA,GAAA4F,EAAAzC,aAAAyC,EAAA,UAAAxE,EAAAwE,EAAAA,EAAApC,WAAA,UAAApC,EAAAhE,KAAAA,EAAAgE,EAAApB,IAAAA,EAAA4F,GAAA,KAAA/E,OAAA,YAAA+B,KAAAgD,EAAAzC,WAAAjD,GAAA,KAAA2F,SAAAzE,EAAA,EAAAyE,SAAA,SAAAzE,EAAAgC,GAAA,aAAAhC,EAAAhE,KAAA,MAAAgE,EAAApB,IAAA,gBAAAoB,EAAAhE,MAAA,aAAAgE,EAAAhE,KAAA,KAAAwF,KAAAxB,EAAApB,IAAA,WAAAoB,EAAAhE,MAAA,KAAAiI,KAAA,KAAArF,IAAAoB,EAAApB,IAAA,KAAAa,OAAA,cAAA+B,KAAA,kBAAAxB,EAAAhE,MAAAgG,IAAA,KAAAR,KAAAQ,GAAAlD,CAAA,EAAA4F,OAAA,SAAA3C,GAAA,QAAAU,EAAA,KAAAR,WAAAnG,OAAA,EAAA2G,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAA,GAAAb,EAAAG,aAAAA,EAAA,YAAA0C,SAAA7C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAA9C,CAAA,GAAA6F,MAAA,SAAA9C,GAAA,QAAAY,EAAA,KAAAR,WAAAnG,OAAA,EAAA2G,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAA,GAAAb,EAAAC,SAAAA,EAAA,KAAA7B,EAAA4B,EAAAQ,WAAA,aAAApC,EAAAhE,KAAA,KAAA4I,EAAA5E,EAAApB,IAAAuD,EAAAP,EAAA,QAAAgD,CAAA,YAAApE,MAAA,0BAAAqE,cAAA,SAAAvC,EAAAf,EAAAE,GAAA,YAAAf,SAAA,CAAAtD,SAAAiC,EAAAiD,GAAAf,WAAAA,EAAAE,QAAAA,GAAA,cAAAhC,SAAA,KAAAb,SAAAuC,GAAArC,CAAA,GAAAvC,CAAA,CAMA,IAgDA,EAhDmB,WAAO,IAADuI,EACvBnK,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCd,EAAMgB,EAAA,GAAEkK,EAASlK,EAAA,GACxBI,GAAuBC,EAAAA,EAAAA,MAAhB8J,GAAiClK,EAAAA,EAAAA,GAAAG,EAAA,GAArB,GACnBU,QAAQC,IAAI,gBAAiBoJ,GAE7B,IAAMC,EAAqC,QAA5BH,EAAGE,EAAaE,IAAI,gBAAQ,IAAAJ,EAAAA,EAAI,GAyB7C,OAxBFnJ,QAAQC,IAAI,YAAaqJ,IAIzBE,EAAAA,EAAAA,YAAU,WACT,GAAKF,EAAL,CAEC,IAAMG,EAAc,eAAAxL,GAAAyL,EAAAA,EAAAA,GAAA/I,IAAAyG,MAAG,SAAAuC,IAAA,IAAAC,EAAA,OAAAjJ,IAAAwB,MAAA,SAAA0H,GAAA,cAAAA,EAAA5B,KAAA4B,EAAAhE,MAAA,cAAAgE,EAAA5B,KAAA,EAAA4B,EAAAhE,KAAA,GAEEiE,EAAAA,EAAAA,IAAYR,GAAU,OAArCpL,EAAM2L,EAAA3E,KAEZkE,EAAUlL,GAEV2L,EAAAhE,KAAA,gBAAAgE,EAAA5B,KAAA,EAAA4B,EAAAE,GAAAF,EAAA,SAGD7J,QAAQC,IAAI4J,EAAAE,GAAMC,SAAQ,yBAAAH,EAAAzB,OAAA,GAAAuB,EAAA,kBAG5B,kBAZmB,OAAA1L,EAAAgM,MAAA,KAAAC,UAAA,KAapBT,GAfsB,CAiBxB,GAAG,CAACH,KAGF7J,EAAAA,EAAAA,MAAA,OAAAnB,SAAA,EACGD,EAAAA,EAAAA,KAAC8L,EAAY,KACb9L,EAAAA,EAAAA,KAAC+L,EAAAA,EAAU,CAAClM,OAAQA,MAc3B","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/SearchMovies/SearchMovies.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const MoviesLink = styled(Link)`\n  font-size: 20px;\n  color: black;\n  \n  \n  &:hover \n   {\n      box-shadow: 0px 11px 10px -7px rgba(16, 110, 253, 1);\n      -webkit-box-shadow: 0px 11px 10px -7px rgba(16, 110, 253, 1);\n      -moz-box-shadow: 0px 11px 10px -7px rgba(16, 110, 253, 1);\n      transform: scale(1.03);\n    }\n  }\n`;\n\n\nexport const MoviesItem = styled.li`\nmargin-bottom: 10px;\n\n`","import React from 'react'\nimport {useLocation} from 'react-router-dom';\nimport { MoviesLink, MoviesItem } from \"./MoviesList.styled.js\";\n\nconst MoviesList = ({movies}) => {\n    const location = useLocation()\n\n  return (\n    <ul>\n        {movies.map(({title, id, name}) => (\n             <MoviesItem key={id}>\n             < MoviesLink \n             state={{from: location}} \n             to={`/movies/${id}`} >\n               {title ? title : name}\n             </ MoviesLink>\n           </MoviesItem>\n        ))}\n      </ul>\n  )\n}\n\nexport default MoviesList\n","import {useSearchParams} from 'react-router-dom';\nimport React, { useState,} from \"react\";\n\nconst SearchMovies = () => {\n    const [searchValue, setSearchValue] = useState('');\n    const [, setSearchParams] = useSearchParams();\n    \n    const handleSearchParams = (event) => {\n        event.preventDefault()\n        const searchValue = event.target.children.search.value\n        console.log(\"searchValue\", searchValue)\n    \n        if (searchValue.trim().length > 2 ) {\n          setSearchParams({query:  searchValue})\n    \n        }\n      };\n  return (\n    <div>\n      <form onSubmit={handleSearchParams} >\n        <input type=\"text\"\n        name = \"search\"\n       placeholder=\"Enter movie\"\n        value={searchValue}\n        onChange={(e) => setSearchValue(e.target.value)}\n        required\n        minLength={2}\n        /> \n       \n        <button type='submit' >Search</button>\n      </form>\n\n    </div>\n  )\n}\n\nexport default SearchMovies\n","// import {Link, useSearchParams, useLocation} from 'react-router-dom';\nimport {useSearchParams} from 'react-router-dom';\nimport React, { useState, useEffect } from \"react\";\nimport {fetchMovies} from '../../services/fetchMovies';\nimport SearchMovies from 'components/SearchMovies/SearchMovies';\nimport MoviesList from 'components/MoviesList/MoviesList'\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([])\n  const [searchParams] = useSearchParams()\n  console.log(\"searchParams2\", searchParams)\n\n  const movieName = searchParams.get('query') ?? ''\n  console.log(\"movieName\", movieName)\n  // const location = useLocation()\n\n\n  useEffect(() => {\n   if (!movieName ) return\n\n    const fetchMovieData = async () => {\n      try {\n        const movies = await fetchMovies(movieName)\n      \n        setMovies(movies)\n        \n        // console.log('movies', movies)\n      }\n      catch(error){\n       console.log(error.message)\n      \n      }\n    }\n    fetchMovieData()\n\n  }, [movieName]);\n\n    return (\n    <div>\n       <SearchMovies/> \n       <MoviesList movies={movies}/>\n      {/* <ul>\n        {movies.map(({title, id, name}) => (\n             <li key={id}>\n             <Link \n             state={{from: location}} \n             to={`/movies/${id}`} >\n               {title ? title : name}\n             </Link>\n           </li>\n        ))}\n      </ul> */}\n    </div>\n    )\n}\nexport default MoviesPage\n\n\n\n\n\n\n// onClick={()=>setSearchParams({})}\n\n/* <div>\n      <h2>Trending today</h2>\n      <ul>\n      {movies.map(({title, id, name}) => {\n        return (\n         \n            <HomeItem key={id}>\n              <HomeLink  to={`/movies/${id}`} >\n                {title ? title : name}\n              </HomeLink>\n            </HomeItem>\n    \n        )\n      })}\n      </ul>\n    </div> */\n\n\n\n// return (\n//     <div>\n// <ul>\n//   {images.map(({ id, original_title }) => (\n//     <li key={id}>\n//       <Link to={`${original_title}`}>\n//         {original_title}\n    \n//       </Link>\n//     </li>\n//   ))}\n// </ul>\n// </div>\n// )\n\n// const [movies, setMovies] = useState([\n//   'movie-1', 'movie-2','movie-3', 'movie-4', 'movie-5'\n// ]\n// )\n\n/* <div><input type=\"text\" />\nHi it is movies page\n</div> */\n\n\n\n  // useEffect(() => {\n  //   setSearchParams({ movieName }); // Обновляем параметры строки запроса при изменении movieName\n  // }, [movieName, setSearchParams]);\n   \n  //   useEffect(()=>{\n\n\n  //    const fetchData = async()=> {\n  //       try{ \n  //           const {data} = await fetchMovies(movieName)\n  //           console.log(data.results)\n  //           const array = data.results\n  //           // setMovies([...movies, movieName])\n  //          }\n  //          catch(error) {\n  //          console.log(error.message)\n\n  //          }\n  //    }\n  //     fetchData()\n  //   }, [movieName])\n\n  // import { useEffect } from \"react\";\n// import {fetchMovies} from \"../../services/fetchMovies.js\";\n\n// const q = 'cat'\n// const k = `/trending/movie/day?language=en-US&page=1`"],"names":["MoviesLink","styled","Link","_templateObject","_taggedTemplateLiteral","MoviesItem","_templateObject2","_ref","movies","location","useLocation","_jsx","children","map","_ref2","title","id","name","state","from","to","concat","_useState","useState","_useState2","_slicedToArray","searchValue","setSearchValue","_useSearchParams","useSearchParams","setSearchParams","_jsxs","onSubmit","event","preventDefault","target","search","value","console","log","trim","length","query","type","placeholder","onChange","e","required","minLength","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","_searchParams$get","setMovies","searchParams","movieName","get","useEffect","fetchMovieData","_asyncToGenerator","_callee","_movies","_context","fetchMovies","t0","message","apply","arguments","SearchMovies","MoviesList"],"sourceRoot":""}