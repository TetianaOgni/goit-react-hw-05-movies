{"version":3,"file":"static/js/431.3a42538e.chunk.js","mappings":"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","sources":["components/SearchMovies/SearchMovies.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import {useSearchParams} from 'react-router-dom';\nimport React, { useState,} from \"react\";\n\nconst SearchMovies = () => {\n    const [searchValue, setSearchValue] = useState('');\n    const [, setSearchParams] = useSearchParams();\n    \n    const handleSearchParams = (event) => {\n        event.preventDefault()\n        const searchValue = event.target.children.search.value\n        console.log(\"searchValue\", searchValue)\n    \n        if (searchValue.trim().length > 2 ) {\n          setSearchParams({query:  searchValue})\n    \n        }\n      };\n  return (\n    <div>\n      <form onSubmit={handleSearchParams} >\n        <input type=\"text\"\n        name = \"search\"\n       placeholder=\"Enter movie\"\n        value={searchValue}\n        onChange={(e) => setSearchValue(e.target.value)}\n        required\n        minLength={2}\n        /> \n       \n        <button type='submit' >Search</button>\n      </form>\n\n    </div>\n  )\n}\n\nexport default SearchMovies\n","import {Link, useSearchParams, useLocation} from 'react-router-dom';\nimport React, { useState, useEffect } from \"react\";\nimport {fetchMovies} from '../../services/fetchMovies';\nimport SearchMovies from 'components/SearchMovies/SearchMovies';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([])\n  const [searchParams] = useSearchParams()\n  console.log(\"searchParams2\", searchParams)\n\n  const movieName = searchParams.get('query') ?? ''\n  console.log(\"movieName\", movieName)\n  const location = useLocation()\n\n\n  useEffect(() => {\n   if (!movieName ) return\n\n    const fetchMovieData = async () => {\n      try {\n        const movies = await fetchMovies(movieName)\n      \n        setMovies(movies)\n        \n        // console.log('movies', movies)\n      }\n      catch(error){\n       console.log(error.message)\n      \n      }\n    }\n    fetchMovieData()\n\n  }, [movieName]);\n\n    return (\n    <div>\n       <SearchMovies/> \n      <ul>\n        {movies.map(({title, id, name}) => (\n             <li key={id}>\n             <Link \n             state={{from: location}} \n             to={`/movies/${id}`} >\n               {title ? title : name}\n             </Link>\n           </li>\n        ))}\n      </ul>\n    </div>\n    )\n}\nexport default MoviesPage\n\n\n\n\n\n\n// onClick={()=>setSearchParams({})}\n\n/* <div>\n      <h2>Trending today</h2>\n      <ul>\n      {movies.map(({title, id, name}) => {\n        return (\n         \n            <HomeItem key={id}>\n              <HomeLink  to={`/movies/${id}`} >\n                {title ? title : name}\n              </HomeLink>\n            </HomeItem>\n    \n        )\n      })}\n      </ul>\n    </div> */\n\n\n\n// return (\n//     <div>\n// <ul>\n//   {images.map(({ id, original_title }) => (\n//     <li key={id}>\n//       <Link to={`${original_title}`}>\n//         {original_title}\n    \n//       </Link>\n//     </li>\n//   ))}\n// </ul>\n// </div>\n// )\n\n// const [movies, setMovies] = useState([\n//   'movie-1', 'movie-2','movie-3', 'movie-4', 'movie-5'\n// ]\n// )\n\n/* <div><input type=\"text\" />\nHi it is movies page\n</div> */\n\n\n\n  // useEffect(() => {\n  //   setSearchParams({ movieName }); // Обновляем параметры строки запроса при изменении movieName\n  // }, [movieName, setSearchParams]);\n   \n  //   useEffect(()=>{\n\n\n  //    const fetchData = async()=> {\n  //       try{ \n  //           const {data} = await fetchMovies(movieName)\n  //           console.log(data.results)\n  //           const array = data.results\n  //           // setMovies([...movies, movieName])\n  //          }\n  //          catch(error) {\n  //          console.log(error.message)\n\n  //          }\n  //    }\n  //     fetchData()\n  //   }, [movieName])\n\n  // import { useEffect } from \"react\";\n// import {fetchMovies} from \"../../services/fetchMovies.js\";\n\n// const q = 'cat'\n// const k = `/trending/movie/day?language=en-US&page=1`"],"names":["_useState","useState","_useState2","_slicedToArray","searchValue","setSearchValue","_useSearchParams","useSearchParams","setSearchParams","_jsx","children","_jsxs","onSubmit","event","preventDefault","target","search","value","console","log","trim","length","query","type","name","placeholder","onChange","e","required","minLength","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","_searchParams$get","movies","setMovies","searchParams","movieName","get","location","useLocation","useEffect","fetchMovieData","_ref","_asyncToGenerator","_callee","_movies","_context","fetchMovies","t0","message","apply","arguments","SearchMovies","map","_ref2","title","id","Link","from","to","concat"],"sourceRoot":""}